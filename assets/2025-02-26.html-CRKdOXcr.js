import{_ as n,c as e,d as s,o as l}from"./app-CCD6v6RA.js";const i={};function t(o,a){return l(),e("div",null,a[0]||(a[0]=[s(`<h1 id="_2025-02-26" tabindex="-1"><a class="header-anchor" href="#_2025-02-26"><span>2025-02-26</span></a></h1><h2 id="directory-structure" tabindex="-1"><a class="header-anchor" href="#directory-structure"><span>Directory Structure</span></a></h2><h3 id="stock-pylot" tabindex="-1"><a class="header-anchor" href="#stock-pylot"><span>Stock_pylot</span></a></h3><blockquote><p>루트 디렉토리의 이름</p></blockquote><p><code>루트 디렉토리</code> : &quot;최상위 디렉토리&quot;를 의미</p><ul><li>프로젝트에서 가장 위에 있는 폴더</li><li>&quot;뿌리 폴더&quot;=&quot;루트 디렉토리&quot;</li><li>컴퓨터로 따지면 <ul><li>C드라이브, D드라이브...</li></ul></li><li>프로젝트 관점 <ul><li>프로젝트를 전부 표현할 수 있는 폴더</li></ul></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">.</span> <span class="token punctuation">(</span>현재 디렉토리<span class="token punctuation">)</span></span>
<span class="line">├── 000660_result.png</span>
<span class="line">├── auth.py</span>
<span class="line">├── dataProcessing.py</span>
<span class="line">├── LICENSE</span>
<span class="line">├── main.py</span>
<span class="line">├── query.py</span>
<span class="line">├── README.md</span>
<span class="line">├── requirements-pip.txt</span>
<span class="line">├── requirements.txt</span>
<span class="line">└── venv</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="디렉토리" tabindex="-1"><a class="header-anchor" href="#디렉토리"><span>디렉토리 &quot;.&quot;</span></a></h3><ol><li><code>.</code> : 현재 디렉토리를 의미</li><li><code>..</code> : 상위 디렉토리를 의미</li></ol><h4 id="디렉토리가-전체-를-의미하게-되는-경우" tabindex="-1"><a class="header-anchor" href="#디렉토리가-전체-를-의미하게-되는-경우"><span>&quot;.&quot; 디렉토리가 &quot;전체&quot;를 의미하게 되는 경우</span></a></h4><p><code>git add .</code> <code>code .</code> : &quot;전체 디렉토리&quot;를 의미하는 걸로 쓰임</p><ul><li><code>git add {dir_name}</code> : {dir_name} 에 디렉토리 이름을 입력해서, 해당 디렉토리 내부의 변경사항을 <code>git add</code> 하는 것이 가능함 <ul><li><code>git add .</code> : {dir_name}으로 &quot;현재 디렉토리&quot;를 넘겨준 것</li><li>보통 <code>git add</code> 명령어는 &quot;루트 디렉토리&quot;에서 많이 수행을 함</li><li>=&gt; <code>git add .</code> 루트 디렉토리 내부의 &quot;모든 변경사항&quot;을 스테이징 하는 게 됨</li></ul></li></ul><h2 id="진입점" tabindex="-1"><a class="header-anchor" href="#진입점"><span>진입점</span></a></h2><p>&quot;프로그램의 시작점&quot;이 되는 파일을 &quot;진입점&quot;이라고 부름</p><blockquote><p>stock_pylot 에서는 <code>main.py</code> 를 진입점으로 사용함 대부분의 파이썬 프로젝트는 <code>main.py</code> 를 진입점으로 사용한다</p></blockquote><h4 id="main-py-외의-파이썬-파일들" tabindex="-1"><a class="header-anchor" href="#main-py-외의-파이썬-파일들"><span><code>main.py</code> 외의 파이썬 파일들</span></a></h4><ul><li>특정한 기능, 함수, 로직을 담고 있는 파일들</li><li><code>main.py</code> 또는 다른 파일들이 import 해서 사용을 함</li><li>결코 직접 사용하는 파일들이 X</li></ul><h1 id="main-py-파악하기" tabindex="-1"><a class="header-anchor" href="#main-py-파악하기"><span><code>main.py</code> 파악하기</span></a></h1><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment"># 라이브러리들</span></span>
<span class="line"><span class="token keyword">import</span> os <span class="token comment"># 파이썬에서 기본 제공하는 Built-in 라이브러리</span></span>
<span class="line"><span class="token keyword">import</span> requests <span class="token comment"># conda install ~</span></span>
<span class="line"><span class="token keyword">from</span> dotenv <span class="token keyword">import</span> load_dotenv <span class="token comment"># conda install ~</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 파일에서 가져온 함수들</span></span>
<span class="line"><span class="token keyword">from</span> auth <span class="token keyword">import</span> Get_token</span>
<span class="line"><span class="token keyword">from</span> query <span class="token keyword">import</span> Query_currentPrice<span class="token punctuation">,</span>GetValue_byDate</span>
<span class="line"><span class="token keyword">from</span> dataProcessing <span class="token keyword">import</span> GetFiltered_clpr</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="built-in-라이브러리" tabindex="-1"><a class="header-anchor" href="#built-in-라이브러리"><span>Built-in 라이브러리</span></a></h4><ul><li>라이브러리: 특정한 기능이나, 개발하는 데 필요한 코드들을 &quot;모아놓은 것&quot;(도서관) <ul><li>모든 기능을 &quot;직접 구현&quot;하기에는 어렵고, 시간이 오래 걸리니까(귀찮으니까)</li></ul></li><li>간단한 기능이면 직접 구현하는 게 좋음</li></ul><h1 id="흐름" tabindex="-1"><a class="header-anchor" href="#흐름"><span>흐름</span></a></h1><p><code>main.py</code> $\\to$ 라이브러리들 로딩 $\\to$ 환경변수 불러오기 <strong>$\\to$ Get_token 함수로 토큰 가져오기</strong></p><p>$\\to$ 사용자 입력으로 종목번호, 시작일, 종료일 받기 $\\to$ <strong>GetValue_byDate 함수로 기간 데이터 읽기</strong></p><h3 id="auth-py" tabindex="-1"><a class="header-anchor" href="#auth-py"><span>Auth.py</span></a></h3><ul><li>Appkey, appsecret 을 받아서 token을 반환함</li></ul>`,26)]))}const d=n(i,[["render",t],["__file","2025-02-26.html.vue"]]),p=JSON.parse('{"path":"/til/2025-02-26.html","title":"2025-02-26","lang":"ko-KR","frontmatter":{},"headers":[{"level":2,"title":"Directory Structure","slug":"directory-structure","link":"#directory-structure","children":[{"level":3,"title":"Stock_pylot","slug":"stock-pylot","link":"#stock-pylot","children":[]},{"level":3,"title":"디렉토리 \\".\\"","slug":"디렉토리","link":"#디렉토리","children":[]}]},{"level":2,"title":"진입점","slug":"진입점","link":"#진입점","children":[{"level":3,"title":"Auth.py","slug":"auth-py","link":"#auth-py","children":[]}]}],"git":{"updatedTime":1740575254000,"contributors":[{"name":"rlaekdrms","username":"rlaekdrms","email":"danielyoonho@naver.com","commits":1,"url":"https://github.com/rlaekdrms"}]},"filePathRelative":"til/2025-02-26.md"}');export{d as comp,p as data};
