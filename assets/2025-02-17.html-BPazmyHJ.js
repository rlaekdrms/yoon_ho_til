import{_ as s,c as a,d as p,o as t}from"./app-Uoq8PVq3.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="_2025-02-17" tabindex="-1"><a class="header-anchor" href="#_2025-02-17"><span>2025-02-17</span></a></h1><h2 id="데이터-프로세싱-그래프-만들기" tabindex="-1"><a class="header-anchor" href="#데이터-프로세싱-그래프-만들기"><span>데이터 프로세싱 그래프 만들기</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt</span>
<span class="line"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np</span>
<span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd</span>
<span class="line"><span class="token keyword">import</span> pandas <span class="token keyword">as</span> df</span>
<span class="line"><span class="token keyword">def</span> <span class="token function">GetFiltered_clpr</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    columns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;dates&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;values&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span>columns<span class="token operator">=</span>columns<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> row <span class="token keyword">in</span> data<span class="token punctuation">[</span><span class="token string">&#39;output2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span></span>
<span class="line">        new_row <span class="token operator">=</span>  pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;dates&quot;</span><span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">&#39;stck_bsop_date&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;values&quot;</span><span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">&#39;stck_clpr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        df <span class="token operator">=</span> pd<span class="token punctuation">.</span>concat<span class="token punctuation">(</span><span class="token punctuation">[</span>df<span class="token punctuation">,</span>new_row<span class="token punctuation">]</span><span class="token punctuation">,</span>ignore_index<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment"># print(row)</span></span>
<span class="line">        key <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token string">&#39;stck_bsop_date&#39;</span><span class="token punctuation">]</span></span>
<span class="line">        <span class="token comment"># print(newKey)</span></span>
<span class="line">        result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token string">&#39;stck_clpr&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    df_sorted_by_values <span class="token operator">=</span> df<span class="token punctuation">.</span>sort_values<span class="token punctuation">(</span>by<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;dates&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;values&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ascending<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">&quot;values&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&quot;orange&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>df<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> result</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)]))}const i=s(e,[["render",o],["__file","2025-02-17.html.vue"]]),u=JSON.parse('{"path":"/til/2025-02-17.html","title":"2025-02-17","lang":"ko-KR","frontmatter":{},"headers":[{"level":2,"title":"데이터 프로세싱 그래프 만들기","slug":"데이터-프로세싱-그래프-만들기","link":"#데이터-프로세싱-그래프-만들기","children":[]}],"git":{"updatedTime":1739950182000,"contributors":[{"name":"rlaekdrms","username":"rlaekdrms","email":"danielyoonho@naver.com","commits":1,"url":"https://github.com/rlaekdrms"}]},"filePathRelative":"til/2025-02-17.md"}');export{i as comp,u as data};
